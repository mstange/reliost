name: Docker

on:
  push:
    branches:
      - main
      - production
  pull_request:
    branches:
      - main
      - production

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile --tag reliost:dev \
            --build-arg github_build_url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            --build-arg github_run_id=$GITHUB_RUN_ID
      - name: Archive Docker image
        run: docker save -o image.tar reliost:dev
      # This makes it possible to load this image from subsequent jobs.
      - uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: ./image.tar
  publish:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/production' }}
    permissions:
        contents: 'read'
        id-token: 'write'
    steps:
      # - uses: actions/download-artifact@v4
      #   with:
      #     name: docker-image
      # - name: Display structure of downloaded files
      #   run: ls -R
      # - name: Load archived Docker image
      #   run: docker load -i ./image.tar
      - uses: actions/checkout@v4
      - name: Auth to App Engine
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
      - name: Deploy to App Engine
        id: deploy
        uses: google-github-actions/deploy-appengine@v1
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          deliverables: app.yaml
      # Example of using the output
      - id: 'test'
        run: 'curl "${{ steps.deploy.outputs.url }}"'
